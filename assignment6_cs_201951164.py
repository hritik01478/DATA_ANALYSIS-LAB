# -*- coding: utf-8 -*-
"""Assignment6_CS_201951164.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a9FefaM574fD-dRg-zyc_iemCKqqK2RV

#                                  Data Analysis Lab Assignment-6 
### Name - Urmila Rathore
### ID - 201951164
### Section - 1

### Import statements
"""

import pandas as pd
import seaborn as sns
import math

df=pd.read_csv(r"C:\Users\Hp\Desktop\SHAPEAI\DATA_ANALYSIS-LAB\Stocks_pe.csv")
df

"""### Removing all zero and NA rows from Data frame"""

df = df[df["P/E"]!= 0]
df=df.dropna()

"""### Mean"""

print("Mean of the data is ",df["P/E"].mean())

"""### Median"""

print("Median of the data is ",df["P/E"].median())

"""### Histogram Plot of data"""

sns.histplot(data=df, x="P/E",bins=15,kde=True)

"""### Box plot of data"""

sns.boxplot(y=df["P/E"])

"""#### There is a huge difference between mean and median due to noise present in the data which can be observed in box plot as the points are spreaded over."""

df["wt"]=df["MarketCap"]/df["MarketCap"].sum()
df

"""###  Weighted mean"""

#  Weighted mean
tmp=(df["P/E"]*df["wt"])/df["wt"].sum()
weighted_mean=tmp.sum()
print("Weighted mean of data is ",weighted_mean)

"""### Sorting Data"""

#  Sorting Data
sorted_df=df.sort_values(by=['P/E'])
display(sorted_df)

"""###  Trimmed Mean"""

#  Trimmed Mean
trimed_percentage=0.01
trimnum=math.floor(len(sorted_df)*trimed_percentage)
trimmean=sorted_df["P/E"].iloc[trimnum:len(sorted_df)-trimnum].mean()
print("The trimmed mean of data is",trimmean)

"""###  Weighted median"""

#  Weighted median
wightedsum=0
for i, row in sorted_df.iterrows():
    wightedsum+=row["wt"]
    if wightedsum>=0.5:
        print(row)
        weighted_median=row["P/E"]
        break
print("Weighted Median of data is ",weighted_median)

"""### Deviation"""

# Deviation
df["P/E"]-df["P/E"].mean()

"""### Standard deviation"""

# Standard deviation
print("The standard deviation of data is ",df["P/E"].std())

"""### Variance"""

# Variance
print("The variance of data is ",df["P/E"].var())

"""### Mean absolute deviation"""

# Mean absolute deviation
print("Mean absoulte Deviation of data ",((df["P/E"]-df["P/E"].mean()).abs()).mean())

"""### Median absolute deviation from the median"""

# Median absolute deviation from the median
d_1=df["P/E"]-df["P/E"].median()
d_2=d_1.abs()
d_3=d_2.sort_values()
print("Median absolute deviation from the median of the data is",d_3.median())

"""### Range of data"""

# Range (Order statistics)
df_sort=df["P/E"].sort_values()
print("Maximum value in the data",df_sort.iloc[-1])
print("Minimum value in the data",df_sort.iloc[0])
Range=df_sort.iloc[-1]-df_sort.iloc[0]
print("The range of given data is",Range)

"""#### As the range of the data is high which says that data is dispersed over a huge surface

### Percentile
"""

# Percentile (Order Statistics)
th=df["P/E"].quantile(0.5)
print("Threshold value",th)
print((df["P/E"]<=th).sum()+1)

"""### Inter Qualitile Range"""

IQR=df["P/E"].quantile(0.75)-df["P/E"].quantile(0.25)
print("The Inter Qualitile Range of given data is",IQR)

